version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:13
    environment:
      POSTGRES_DB: blog_management
      POSTGRES_USER: blog_user
      POSTGRES_PASSWORD: blog_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - blog_network

  # Redis for caching
  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    networks:
      - blog_network

  # Django Backend
  backend:
    build: ./backend
    environment:
      - DEBUG=False
      - DATABASE_URL=postgresql://blog_user:blog_password@db:5432/blog_management
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=your-production-secret-key-here
      - ALLOWED_HOSTS=localhost,127.0.0.1,backend
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000,http://frontend:3000
    volumes:
      - ./backend:/app
      - media_files:/app/media
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    networks:
      - blog_network
    command: >
      sh -c "python manage.py migrate &&
              python manage.py collectstatic --noinput &&
              gunicorn --bind 0.0.0.0:8000 blog_project.wsgi:application"

  # Next.js Frontend
  frontend:
    build: ./frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000/api
      - NEXT_PUBLIC_BACKEND_URL=http://localhost:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - blog_network
    command: npm run dev

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    networks:
      - blog_network

volumes:
  postgres_data:
  media_files:

networks:
  blog_network:
    driver: bridge
